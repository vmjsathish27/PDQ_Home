body {
	font-family: proxima-nova;
	padding: 0;
	margin: 0;
}


.banner-content-in p {
    line-height: 1.4em;
    padding: 8px 0px;
}
section#footer-main {
    background: #5b5b5b!important;
	padding: 15px 0px;
}
#Features {
    padding-bottom: 35px;
}
#footer ul li a{
color:#fff!important;
padding: 6px 10px;
}
#footer ul li a:hover {
    color: #fff!important;
	background: #f00;
}

.myBtnD {
    display: block;
    right: 23px;
    position: fixed;
    bottom: 40px;
    right: 30px;
    z-index: 99;
    letter-spacing: 1px;
    font-size: 16px;
    color: #fff!important;
    text-transform: uppercase;
    border: none;
    text-align: center;
    padding: 10px 35px!important;
    cursor: pointer;
    padding: 15px;
    background-color: red;
    border-radius: 26px;
}
.myBtnD:hover, .myBtn:hover, .myBtn:focus, .myBtn:active, .myBtnD:focus, .myBtn:focus {
    color: #ff0000!important;
    outline: 0;
    background-color: #eee;
    background-image: none;
}
.myBtnD:focus, .myBtnD:active {
	color: #fff!important;
    outline: 0;
    background-color: red;
}


.ImgHeader {
    padding-bottom: 40px;
}
.ImgHeader h2{   
    font-family: proxima-nova;
    font-size: 42px;
    font-weight: bold;
    color: #333;
}

.ImageSection-section {
    padding: 60px 0;
}

.ImageSection-section .section-header {
    padding: 0;
}

.Home-section-header {
	padding: 25px 0px;
}
.Home-section-header h2 {	
	font-family: proxima-nova;	
    font-size: 37px;
    font-weight: 700;    
    color: #333;
}
.Home-section-content {
	padding: 25px 0px;
}
.Home-section-content img {
	max-width: 100%;
    height: 100px;
}
.Home-section-content p {
	font-family: proxima-nova;
    color: #6d6d6d;
    margin: 2px 0 0px 0px;
    font-weight: 400;
    width: 83%;
    line-height: 26px;
    font-size: 18px;
}



.fluid-width-ImageSection-wrapper {
    width: 100%;
    position: relative;
    padding: 0;
}
.fluid-width-ImageSection-wrapper iframe, .fluid-width-ImageSection-wrapper object, .fluid-width-ImageSection-wrapper embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
#ImageSection ul {
    display: block;
    top: 0;
    z-index: 10;
    padding: 6px 0px;
}





.video-section {
    padding: 100px 0;
	background: lightgrey;
}

.video-section .section-header {
    padding: 0;
	
}

.fluid-width-video-wrapper {
    width: 100%;
    position: relative;
    padding: 0;
}
.fluid-width-video-wrapper iframe, .fluid-width-video-wrapper object, .fluid-width-video-wrapper embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
#video ul {
    display: block;
    top: 0;
    z-index: 10;
    padding: 6px 0px;
}


.section-header-first > h2 {
    mline-height: 45px;
	font-family: proxima-nova;	
    font-size: 35px;
    font-weight: 500;
    
    color: #333;
}


.section-header > h2 {
    mline-height: 45px;
	font-family: proxima-nova;	
    font-size: 35px;
    font-weight: 500;
    
    color: #333;
}
.section-header > p {
	font-family: proxima-nova;
    color: #6d6d6d;
    margin: 2px 0 0px 0px;
    font-weight: 400;
    width: 83%;
    line-height: 26px;
    font-size: 18px;
}
ul.section-header-list {
    padding: 0;
}
.section-header-list li:before {
    content: "\f00c";
    font-family: FontAwesome;
    color: #000;
    font-size: 14px;
    font-weight: 300;
    display: inline-block;
    margin-right: 10px;
    -webkit-text-stroke: 1px #fff;
}
.section-header-list li {
    font-family: proxima-nova;
    font-size: 18px;
    color: #6d6d6d;
    list-style-type: none;
    letter-spacing: 0;
    line-height: 1.5em;
}
.section-header-list-first li {
    font-family: proxima-nova;
    font-size: 18px;
    color: #6d6d6d;
    list-style-type: none;
    letter-spacing: 0;
    line-height: 1.2em;
    padding: 6px 0px;
}

.section-header .section-btns {
    width: 220px;
    display: inline-block;
    padding: 9px 10px;
    text-align: center;
    
}
.section-btns {
    border: 1px solid #292929;
    padding: 10px 60px;
    border-radius: 25px;
    font-size: 15px;
    font-family: proxima-nova;
    color: #292929!important;
    background: 0 0;
    text-decoration: none;
    letter-spacing: 1.5px;
    text-transform: uppercase;
    font-weight: 600;
}
a.section-btns:hover {
    background: red;
    color: #fff!important;
    border: 1px solid #fff;
    text-decoration: none;
}


@media (min-width:992px){
#ImageSection1 .section-header {
    padding-left: 190px;
}
#video1 .section-header {
    padding-left: 20px;
	
}
}

.FeaturesContents {
    padding: 50px 0px;
}


#snippet {
    
    background: #ff0000;
    float: left;
    width: 100%;
    position: relative;
    padding: 75px 0px;
	margin-bottom: 20px;
}
.margin-snippet {
    margin-left: 12%;
}
#snippet h2 {
    font-size: 40px;
    font-weight: 600!important;
    color: #fff;
    letter-spacing: 0;
    text-align: center;
    margin: 0;
	font-family: proxima-nova;
}
#snippet p {
    font-size: 30px;
    color: #fff;
    letter-spacing: 0;
    text-align: center;
    line-height: 30px;
    font-weight: lighter;
    margin: 10px 0;
	font-family: proxima-nova;
}


.Features-Section {
padding: 65px 0;
}

#Features p {
	font-family: proxima-nova;
    font-size: 17px;
    color: #333;
    letter-spacing: 0;
    line-height: 1.4em;
    font-weight: 300;
    margin: 20px 0;
}
.Features-Section-Header {
	padding-top: 50px;
}
.Features-Section-Header h4 {
    color: #6e6e6e;
    font-size: 37px;
    font-weight: 800;
    text-decoration: underline;
	font-family: proxima-nova;
}
.Features-Section-Header h4 {
    color: #6e6e6e;
    font-size: 37px;
    font-weight: 800;
    text-decoration: underline;
	font-family: proxima-nova;
}


#Pricing {
    padding: 10px 0px;
}
.Pricing-Section {
	padding: 65px 0;
}
.Pricing-Section-Header h4 {
    color: #6e6e6e;
    font-size: 37px;
    font-weight: 800;
    text-decoration: underline;
	font-family: proxima-nova;
}
	
#help {
    padding: 60px 0px;
	background: red;
}	
.contact-main {
	padding: 10px 0px;
}
.contact-main h2{
	font-family: proxima-nova;	
    font-size: 35px;
    font-weight: 500;    
    color: #fff;
}
.contact-main h4{
	font-family: proxima-nova;	
    font-size: 35px;
    font-weight: 500;    
    color: #fff;
}
.contact-main p{
	font-family: proxima-nova;	
    font-size: 18px;
    font-weight: 500;    
    color: #fff;
}
.contact-main a{
	font-family: proxima-nova;	
    font-size: 16px;
    font-weight: 500;    
    color: #e4ff00;
}
.contact-main label {
	font-family: proxima-nova;	
	color: #fff;
}
#submit-Contact {
    color: #ff0000!important;
    background-color: #ffffff!important;
    transition: all .1s ease-in-out;
}
#submit-Contact:hover {
    background: #5a5a5a!important;
    color: #fff!important;
    transform: scale(1.1);
}
	
	


.details-div-in {
    background: #ededed;
    margin: 10px 0px;
    /* max-height: 294px; */
    text-align: center;
    padding: 25px 15px!important;
    width: 100%;
    float: left;
    border-radius: 25px;
}
.details-div-in h4 {
    color: #ff0000;
    font-size: 22px;
    font-weight: bold;
}
.details-div-in p {
    font-family: proxima-nova;
    font-size: 19px;
    color: #333;
    letter-spacing: 0;
    line-height: 28px;
    font-weight: 300;
    margin: 20px 0;
}

.footer-logo {
    height: 35px;
}

.navbar-default {
    background-color: #f8f8f8;
    border-color: #e7e7e7;
	height: 65px;
}
.navbar-fixed-top {
    top: 0;
    border-width: 0 0 1px;
}
.navbar-header img {
    margin-top: 14px;
    margin-bottom: 15px;
}
.header-logo img {
    max-width: 100%;
    height: 31px;
}
@media (min-width: 768px)
.navbar-right {
    float: right!important;
    margin-right: -15px;
}
.nav {
    padding-left: 0;
    margin-bottom: 0;
    list-style: none;
}
.navbar-default .navbar-toggle {
    border-color: #ddd;
}

button.navbar-toggle {
    position: absolute;
    top: 0;
    right: 0;
}
@media (min-width: 768px)
.navbar-toggle {
    display: none;
}

 .navbar-default .navbar-nav>li>a:hover {
    color: #fff;
    background-color: #ff0000;
}
.navbar-toggle {
    position: relative;
    float: right;
    padding: 9px 10px;
    margin-top: 8px;
    margin-right: 15px;
    margin-bottom: 8px;
    background-color: transparent;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
}
@media (min-width: 768px)
.navbar-toggle {
    display: none;
}
.navbar-default .navbar-toggle .icon-bar {
    background-color: #888;
}

.navbar-toggle .icon-bar {
    display: block;
    width: 22px;
    height: 2px;
    border-radius: 1px;
	
}
.nav>li {
    position: relative;
    display: block;
}
#myNavbar a {    
    border-radius: 23px;
    margin-top: 9%;
    width: 123px;
    margin-right: 0px;
    transition: .3s;
    text-align: center;
    text-transform: uppercase;
	font-family: proxima-nova;
	padding: 8px 0px;
}
.navbar-default .navbar-nav>li.active a, .navbar-default .navbar-nav>li.active a:focus, .navbar-default .navbar-nav>li.active a:hover {
    color: #fff!important;
    background-color: #63c156!important;
}

.contact-form {
    box-shadow: 3px 9px 30px #3c4042;
    padding: 4% 7% 15%;
    border-radius: 15px;
    background: #fff;
}
.contact-form {
    margin-top: 25%;
}
.btn {
    /* display: inline-block; */
    /* padding: 6px 12px; */
    /* margin-bottom: 0; */
    /* font-size: 14px; */
    font-weight: 400;
    line-height: 1.42857143;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
}
.yellow-btn {
    text-align: center!important;
    margin: 0 auto!important;
    float: none!important;
    display: block!important;
}
.yellow-btn {
    color: #ffffff!important;
    background-color: #ff0000!important;
    transition: all .1s ease-in-out;
}
.yellow-btn:hover {
    background: #5a5a5a!important;
    color: #fff!important;
    transform: scale(1.1);
}
#home {
    background: url(https://www.touch2success.com/landing/pdq/img/pdq-banner-2-v2.jpg) no-repeat center center fixed;
    display: table;
    height: 704px;
    position: relative;
    width: 100%;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}
.text-vcenter {
    text-align: center;
    vertical-align: middle;
    padding: 13% 0;
}
.banner-in-content {
    font-size: 50px;
    text-align: left;
    color: #fff;
    text-transform: capitalize;
    font-weight: 600;
    margin-top: 17%;
}
ul.pdq-spec-list {
    color: #fff;
    font-size: 19px;
    text-align: left;
    margin: 22px 0;
}
.banner-content-in p {
    font-size: 20px;
    text-align: left;
    color: #fff;
}
.contact-form h2 {
    color: #ff0000;
}


.n-line-div {
    background: #ccc;
    padding: 2% 0%;
    font-size: 26px;
}

//
// Forms
// --------------------------------------------------


// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: @line-height-computed;
  font-size: (@font-size-base * 1.5);
  line-height: inherit;
  color: @legend-color;
  border: 0;
  border-bottom: 1px solid @legend-border-color;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
  font-weight: bold;
}


// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  .box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .tab-focus();
}

// Adjust output element
output {
  display: block;
  padding-top: (@padding-base-vertical + 1);
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
}


// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  display: block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  .placeholder();

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: @input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
}


// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}


// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//
// Note that as of 9.3, iOS doesn't support `week`.

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    &.form-control {
      line-height: @input-height-base;
    }

    &.input-sm,
    .input-group-sm & {
      line-height: @input-height-small;
    }

    &.input-lg,
    .input-group-lg & {
      line-height: @input-height-large;
    }
  }
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: @form-group-margin-bottom;
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;

  label {
    min-height: @line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 20px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -20px;
  margin-top: 4px \9;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: @cursor-disabled;
    }
  }
}


// Static form control text
//
// Apply class to a `p` element to make any string of text align with labels in
// a horizontal form layout.

.form-control-static {
  // Size it appropriately next to real form controls
  padding-top: (@padding-base-vertical + 1);
  padding-bottom: (@padding-base-vertical + 1);
  // Remove default margin from `p`
  margin-bottom: 0;
  min-height: (@line-height-computed + @font-size-base);

  &.input-lg,
  &.input-sm {
    padding-left: 0;
    padding-right: 0;
  }
}


// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.input-sm {
  .input-size(@input-height-small; @padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @input-border-radius-small);
}
.form-group-sm {
  .form-control {
    height: @input-height-small;
    padding: @padding-small-vertical @padding-small-horizontal;
    font-size: @font-size-small;
    line-height: @line-height-small;
    border-radius: @input-border-radius-small;
  }
  select.form-control {
    height: @input-height-small;
    line-height: @input-height-small;
  }
  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }
  .form-control-static {
    height: @input-height-small;
    min-height: (@line-height-computed + @font-size-small);
    padding: (@padding-small-vertical + 1) @padding-small-horizontal;
    font-size: @font-size-small;
    line-height: @line-height-small;
  }
}

.input-lg {
  .input-size(@input-height-large; @padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @input-border-radius-large);
}
.form-group-lg {
  .form-control {
    height: @input-height-large;
    padding: @padding-large-vertical @padding-large-horizontal;
    font-size: @font-size-large;
    line-height: @line-height-large;
    border-radius: @input-border-radius-large;
  }
  select.form-control {
    height: @input-height-large;
    line-height: @input-height-large;
  }
  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }
  .form-control-static {
    height: @input-height-large;
    min-height: (@line-height-computed + @font-size-large);
    padding: (@padding-large-vertical + 1) @padding-large-horizontal;
    font-size: @font-size-large;
    line-height: @line-height-large;
  }
}


// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

.has-feedback {
  // Enable absolute positioning
  position: relative;

  // Ensure icons don't overlap text
  .form-control {
    padding-right: (@input-height-base * 1.25);
  }
}
// Feedback icon (requires .glyphicon classes)
.form-control-feedback {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2; // Ensure icon is above input groups
  display: block;
  width: @input-height-base;
  height: @input-height-base;
  line-height: @input-height-base;
  text-align: center;
  pointer-events: none;
}
.input-lg + .form-control-feedback,
.input-group-lg + .form-control-feedback,
.form-group-lg .form-control + .form-control-feedback {
  width: @input-height-large;
  height: @input-height-large;
  line-height: @input-height-large;
}
.input-sm + .form-control-feedback,
.input-group-sm + .form-control-feedback,
.form-group-sm .form-control + .form-control-feedback {
  width: @input-height-small;
  height: @input-height-small;
  line-height: @input-height-small;
}

// Feedback states
.has-success {
  .form-control-validation(@state-success-text; @state-success-text; @state-success-bg);
}
.has-warning {
  .form-control-validation(@state-warning-text; @state-warning-text; @state-warning-bg);
}
.has-error {
  .form-control-validation(@state-danger-text; @state-danger-text; @state-danger-bg);
}

// Reposition feedback icon if input has visible label above
.has-feedback label {

  & ~ .form-control-feedback {
    top: (@line-height-computed + 5); // Height of the `label` and its margin
  }
  &.sr-only ~ .form-control-feedback {
    top: 0;
  }
}


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block; // account for any element using help-block
  margin-top: 5px;
  margin-bottom: 10px;
  color: lighten(@text-color, 25%); // lighten the text some for contrast
}


// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).
//
// Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

.form-inline {

  // Kick in the inline
  @media (min-width: @screen-sm-min) {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .form-control-static {
      display: inline-block;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }

    // Re-override the feedback icon.
    .has-feedback .form-control-feedback {
      top: 0;
    }
  }
}


// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {

  // Consistent vertical alignment of radios and checkboxes
  //
  // Labels also get some reset styles, but that is scoped to a media query below.
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: (@padding-base-vertical + 1); // Default padding plus a border
  }
  // Account for padding we're adding to ensure the alignment and of help text
  // and other content below items
  .radio,
  .checkbox {
    min-height: (@line-height-computed + (@padding-base-vertical + 1));
  }

  // Make form groups behave like rows
  .form-group {
    .make-row();
  }

  // Reset spacing and right align labels, but scope to media queries so that
  // labels on narrow viewports stack the same as a default form example.
  @media (min-width: @screen-sm-min) {
    .control-label {
      text-align: right;
      margin-bottom: 0;
      padding-top: (@padding-base-vertical + 1); // Default padding plus a border
    }
  }

  // Validation states
  //
  // Reposition the icon because it's now within a grid column and columns have
  // `position: relative;` on them. Also accounts for the grid gutter padding.
  .has-feedback .form-control-feedback {
    right: floor((@grid-gutter-width / 2));
  }

  // Form group sizes
  //
  // Quick utility class for applying `.input-lg` and `.input-sm` styles to the
  // inputs and labels within a `.form-group`.
  .form-group-lg {
    @media (min-width: @screen-sm-min) {
      .control-label {
        padding-top: (@padding-large-vertical + 1);
        font-size: @font-size-large;
      }
    }
  }
  .form-group-sm {
    @media (min-width: @screen-sm-min) {
      .control-label {
        padding-top: (@padding-small-vertical + 1);
        font-size: @font-size-small;
      }
    }
  }
}




.footer {
    left: 0;
    right: 0;
    margin-top: 0
}

.footer ul  li a {
    font-weight: 700;
	color: white!important;
    position: relative;
    display: block;
    padding: 10px 15px;
}

.footer .nav>li.infoicon>a {
    background: 0 0
} 	 

 ul li a {
    
    color: #fff!important;
}

.footer .nav>li>a:hover {
    background-color: #fff;
    color: #000;
}
.footer {
	margin-top:10px;
	padding-top: 19px;
	padding-bottom: 60px; /* So cookies bar doesn't overlap footer */
	color: #777;
	border-top: 1px solid #e5e5e5;

	/*Fix for footer and category nav displaying togther (looked messy)*/
	position: absolute;
	background:#fff;
	/*z-index: 99999;*/
}

#footerLogo img {
    width: 160px!important;
}
.footer-logo {
    height: 40px;
}
.footer .nav li a {
	padding: 4px 15px;
	font-size:12px;
}

.footer .nav li a {
	padding: 4px 15px;
	font-size:12px;
}
@media only screen and (max-width: 1000px) {
	footer{
		width: 100%;
	}
	footer ul li{
		float:left!important;
		margin-top: 0;
	}
	.resp-footer-fourth-col{
		width: 100%!important;
	}
	.resp-footer-first-col, .resp-footer-second-col,.resp-footer-fourth-col{
		text-align: center!important;
	}
	ul.resp-nav-first, ul.resp-nav-sec,.footer-logo{
		display: inline-block!important;
	}

	.informationIcon{
		padding: 0px!important;
	}
	.applinks a{
		/*float: left!important;*/
		margin-right: 5px;
		display: inline-block;
	}

	.paymentDiv img{
		width: 235px;
		/*float: left;*/
	}
	#footerLogo img{
		/*float: left !important;*/
		height: auto!important;
	}
	.footer .nav li a{
 		padding:4px 7px!important;
 	}
	.margTop10px{
		margin-top: 10px;
	}
	.textCenter{
		text-align: center!important;
	}
}
@media only screen and (min-width: 1001px) {
	.providerTerms{
		text-align: right!important;
	}
	.footer-logo{
		padding-right: 0px!important;
	}
	#androidImg{
		padding-bottom:1px!important;
	}
	.floatRight{
		float: right;
	}
}
@media screen and (min-device-width: 320px) and (max-device-width: 800px) {
 	.footer .nav li a{
		padding:1px 4px!important;
	}
}

